2021-06-07 04:18:44.932 +01:00 [Information] Data Source=DESKTOP-0IH6HO1;Database=ProducCatlog;User Id=admin1;Password=admin1;MultipleActiveResultSets=true;Max Pool Size=10;Connection Timeout=100000;
2021-06-07 04:18:45.761 +01:00 [Information] Starting web host
2021-06-07 04:18:46.662 +01:00 [Warning] Entity '"Product"' has a global query filter defined and is the required end of a relationship with the entity '"ProductHistory"'. This may lead to unexpected results when the required entity is filtered out. Either configure the navigation as optional, or define matching query filters for both entities in the navigation. See https://go.microsoft.com/fwlink/?linkid=2131316 for more information.
2021-06-07 04:18:47.503 +01:00 [Information] Starting IdentityServer4 version "4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f"
2021-06-07 04:18:47.527 +01:00 [Information] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2021-06-07 04:18:47.530 +01:00 [Information] Using the default authentication scheme "Bearer" for IdentityServer
2021-06-07 04:18:47.531 +01:00 [Information] Authentication scheme "Bearer" is configured for IdentityServer, but it is not a scheme that supports signin (like cookies). If you support interactive logins via the browser, then a cookie-based scheme should be used.
2021-06-07 04:18:47.971 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/index.html QueryString:  Request Body: 
2021-06-07 04:18:48.071 +01:00 [Information] Reponse from system: 200: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"/swagger/v1/swagger.json","name":"Amygdalab Product Catalogue v1"}],"deepLinking":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"]}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = window.location.href.replace("index.html", "oauth2-redirect.html").split('#')[0];

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2021-06-07 04:18:48.652 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/v1/swagger.json QueryString:  Request Body: 
2021-06-07 04:18:48.866 +01:00 [Information] Reponse from system: 200: {
  "openapi": "3.0.1",
  "info": {
    "title": "Amygdalab Product Catalogue",
    "description": "A Simple Product Catalogue System",
    "version": "v1"
  },
  "paths": {
    "/api/v{version}/account/admin": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/account/user": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "RegisterResponseApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "$ref": "#/components/schemas/RegisterResponse"
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SearchModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductResponseListApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "nullable": true
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme (Example: 'Bearer 12345abcdef')",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
2021-06-07 04:18:53.805 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 04:18:53.867 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000062-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 03:18:53, ProcessId: 28772, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 04:18:54.766 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 04:18:54.799 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000062-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 03:18:54, ProcessId: 28772, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 04:18:54.805 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 04:18:55.248 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****3BF6" }, Token { TokenType: "access_token", TokenValue: "****_xow" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000062-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 03:18:55, ProcessId: 28772, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 04:19:08.326 +01:00 [Error] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: 'System.String'.
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it. (localhost:5001)
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|283_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.DefaultConnectAsync(SocketsHttpConnectionContext context, CancellationToken cancellationToken)
   at System.Net.Http.ConnectHelper.ConnectAsync(Func`3 callback, DnsEndPoint endPoint, HttpRequestMessage requestMessage, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(Func`3 callback, DnsEndPoint endPoint, HttpRequestMessage requestMessage, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.SendAsyncCore(HttpRequestMessage request, HttpCompletionOption completionOption, Boolean async, Boolean emitTelemetryStartStop, CancellationToken cancellationToken)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-06-07 04:19:08.392 +01:00 [Error] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: 'System.String'.
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it. (localhost:5001)
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|283_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.DefaultConnectAsync(SocketsHttpConnectionContext context, CancellationToken cancellationToken)
   at System.Net.Http.ConnectHelper.ConnectAsync(Func`3 callback, DnsEndPoint endPoint, HttpRequestMessage requestMessage, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(Func`3 callback, DnsEndPoint endPoint, HttpRequestMessage requestMessage, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.SendAsyncCore(HttpRequestMessage request, HttpCompletionOption completionOption, Boolean async, Boolean emitTelemetryStartStop, CancellationToken cancellationToken)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-06-07 04:19:58.285 +01:00 [Information] Data Source=DESKTOP-0IH6HO1;Database=ProducCatlog;User Id=admin1;Password=admin1;MultipleActiveResultSets=true;Max Pool Size=10;Connection Timeout=100000;
2021-06-07 04:19:59.267 +01:00 [Information] Starting web host
2021-06-07 04:20:00.150 +01:00 [Warning] Entity '"Product"' has a global query filter defined and is the required end of a relationship with the entity '"ProductHistory"'. This may lead to unexpected results when the required entity is filtered out. Either configure the navigation as optional, or define matching query filters for both entities in the navigation. See https://go.microsoft.com/fwlink/?linkid=2131316 for more information.
2021-06-07 04:20:01.155 +01:00 [Information] Starting IdentityServer4 version "4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f"
2021-06-07 04:20:01.168 +01:00 [Information] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2021-06-07 04:20:01.171 +01:00 [Information] Using the default authentication scheme "Bearer" for IdentityServer
2021-06-07 04:20:01.171 +01:00 [Information] Authentication scheme "Bearer" is configured for IdentityServer, but it is not a scheme that supports signin (like cookies). If you support interactive logins via the browser, then a cookie-based scheme should be used.
2021-06-07 04:20:01.611 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/index.html QueryString:  Request Body: 
2021-06-07 04:20:01.704 +01:00 [Information] Reponse from system: 200: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"/swagger/v1/swagger.json","name":"Amygdalab Product Catalogue v1"}],"deepLinking":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"]}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = window.location.href.replace("index.html", "oauth2-redirect.html").split('#')[0];

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2021-06-07 04:20:02.436 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/v1/swagger.json QueryString:  Request Body: 
2021-06-07 04:20:02.587 +01:00 [Information] Reponse from system: 200: {
  "openapi": "3.0.1",
  "info": {
    "title": "Amygdalab Product Catalogue",
    "description": "A Simple Product Catalogue System",
    "version": "v1"
  },
  "paths": {
    "/api/v{version}/account/admin": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/account/user": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "RegisterResponseApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "$ref": "#/components/schemas/RegisterResponse"
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SearchModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductResponseListApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "nullable": true
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme (Example: 'Bearer 12345abcdef')",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
2021-06-07 04:20:08.422 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryEndpoint" for "/.well-known/openid-configuration"
2021-06-07 04:20:08.618 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryKeyEndpoint" for "/.well-known/openid-configuration/jwks"
2021-06-07 04:20:08.840 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /api/v1/products QueryString:  Request Body: {
  "name": "Honda3",
  "description": "Made by honda company",
  "costPrice": 5100,
  "sellingPrice": 5100,
  "imageUrl": "string",
  "quantity": 10
}
2021-06-07 04:20:16.174 +01:00 [Information] Create product process started.
2021-06-07 04:20:20.186 +01:00 [Information] Reponse from system: 200: {
  "responseData": null,
  "responseMessage": "Successful",
  "responseCode": "00",
  "requestSuccessful": true
}
2021-06-07 04:21:05.030 +01:00 [Information] Data Source=DESKTOP-0IH6HO1;Database=ProducCatlog;User Id=admin1;Password=admin1;MultipleActiveResultSets=true;Max Pool Size=10;Connection Timeout=100000;
2021-06-07 04:21:05.787 +01:00 [Information] Starting web host
2021-06-07 04:21:06.589 +01:00 [Warning] Entity '"Product"' has a global query filter defined and is the required end of a relationship with the entity '"ProductHistory"'. This may lead to unexpected results when the required entity is filtered out. Either configure the navigation as optional, or define matching query filters for both entities in the navigation. See https://go.microsoft.com/fwlink/?linkid=2131316 for more information.
2021-06-07 04:21:07.435 +01:00 [Information] Starting IdentityServer4 version "4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f"
2021-06-07 04:21:07.449 +01:00 [Information] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2021-06-07 04:21:07.452 +01:00 [Information] Using the default authentication scheme "Bearer" for IdentityServer
2021-06-07 04:21:07.452 +01:00 [Information] Authentication scheme "Bearer" is configured for IdentityServer, but it is not a scheme that supports signin (like cookies). If you support interactive logins via the browser, then a cookie-based scheme should be used.
2021-06-07 04:21:07.895 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/index.html QueryString:  Request Body: 
2021-06-07 04:21:08.006 +01:00 [Information] Reponse from system: 200: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"/swagger/v1/swagger.json","name":"Amygdalab Product Catalogue v1"}],"deepLinking":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"]}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = window.location.href.replace("index.html", "oauth2-redirect.html").split('#')[0];

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2021-06-07 04:21:08.851 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/v1/swagger.json QueryString:  Request Body: 
2021-06-07 04:21:09.020 +01:00 [Information] Reponse from system: 200: {
  "openapi": "3.0.1",
  "info": {
    "title": "Amygdalab Product Catalogue",
    "description": "A Simple Product Catalogue System",
    "version": "v1"
  },
  "paths": {
    "/api/v{version}/account/admin": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/account/user": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "RegisterResponseApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "$ref": "#/components/schemas/RegisterResponse"
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SearchModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductResponseListApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "nullable": true
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme (Example: 'Bearer 12345abcdef')",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
2021-06-07 04:21:22.942 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryEndpoint" for "/.well-known/openid-configuration"
2021-06-07 04:21:23.140 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryKeyEndpoint" for "/.well-known/openid-configuration/jwks"
2021-06-07 04:21:41.391 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 04:21:41.440 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000066-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 03:21:41, ProcessId: 40108, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 04:21:42.119 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 04:21:42.148 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000066-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 03:21:42, ProcessId: 40108, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 04:21:42.160 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 04:21:42.510 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****AB42" }, Token { TokenType: "access_token", TokenValue: "****m1kQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000066-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 03:21:42, ProcessId: 40108, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 04:45:50.223 +01:00 [Information] Data Source=DESKTOP-0IH6HO1;Database=ProducCatlog;User Id=admin1;Password=admin1;MultipleActiveResultSets=true;Max Pool Size=10;Connection Timeout=100000;
2021-06-07 04:45:51.371 +01:00 [Information] Starting web host
2021-06-07 04:45:52.556 +01:00 [Warning] Entity '"Product"' has a global query filter defined and is the required end of a relationship with the entity '"ProductHistory"'. This may lead to unexpected results when the required entity is filtered out. Either configure the navigation as optional, or define matching query filters for both entities in the navigation. See https://go.microsoft.com/fwlink/?linkid=2131316 for more information.
2021-06-07 04:45:53.338 +01:00 [Information] Starting IdentityServer4 version "4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f"
2021-06-07 04:45:53.351 +01:00 [Information] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2021-06-07 04:45:53.355 +01:00 [Information] Using the default authentication scheme "Bearer" for IdentityServer
2021-06-07 04:45:53.355 +01:00 [Information] Authentication scheme "Bearer" is configured for IdentityServer, but it is not a scheme that supports signin (like cookies). If you support interactive logins via the browser, then a cookie-based scheme should be used.
2021-06-07 04:45:53.821 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/index.html QueryString:  Request Body: 
2021-06-07 04:45:53.922 +01:00 [Information] Reponse from system: 200: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"/swagger/v1/swagger.json","name":"Amygdalab Product Catalogue v1"}],"deepLinking":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"]}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = window.location.href.replace("index.html", "oauth2-redirect.html").split('#')[0];

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2021-06-07 04:45:54.556 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/v1/swagger.json QueryString:  Request Body: 
2021-06-07 04:45:54.706 +01:00 [Information] Reponse from system: 200: {
  "openapi": "3.0.1",
  "info": {
    "title": "Amygdalab Product Catalogue",
    "description": "A Simple Product Catalogue System",
    "version": "v1"
  },
  "paths": {
    "/api/v{version}/account/admin": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/account/user": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "RegisterResponseApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "$ref": "#/components/schemas/RegisterResponse"
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SearchModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductResponseListApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "nullable": true
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme (Example: 'Bearer 12345abcdef')",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
2021-06-07 04:46:08.861 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 04:46:08.923 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000054-0000-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 03:46:08, ProcessId: 32368, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 04:46:09.625 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 04:46:09.653 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000054-0000-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 03:46:09, ProcessId: 32368, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 04:46:09.661 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 04:46:10.048 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****E8F5" }, Token { TokenType: "access_token", TokenValue: "****FRog" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000054-0000-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 03:46:10, ProcessId: 32368, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 04:46:22.047 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryEndpoint" for "/.well-known/openid-configuration"
2021-06-07 04:46:22.244 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryKeyEndpoint" for "/.well-known/openid-configuration/jwks"
2021-06-07 04:46:22.390 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /api/v1/products QueryString:  Request Body: {
  "name": "Honda4",
  "description": "Made by honda company",
  "costPrice": 5100,
  "sellingPrice": 5100,
  "imageUrl": "string",
  "quantity": 10
}
2021-06-07 04:47:28.670 +01:00 [Information] Create product process started.
2021-06-07 04:47:29.453 +01:00 [Warning] CorsPolicyService did not allow origin: "https://jwt.io"
2021-06-07 04:47:29.454 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryEndpoint" for "/.well-known/openid-configuration"
2021-06-07 04:47:29.465 +01:00 [Warning] CorsPolicyService did not allow origin: "https://jwt.io"
2021-06-07 04:47:29.465 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryKeyEndpoint" for "/.well-known/openid-configuration/jwks"
2021-06-07 04:47:31.237 +01:00 [Information] Reponse from system: 200: {
  "responseData": null,
  "responseMessage": "Successful",
  "responseCode": "00",
  "requestSuccessful": true
}
2021-06-07 08:15:46.979 +01:00 [Information] Data Source=DESKTOP-0IH6HO1;Database=ProducCatlog;User Id=admin1;Password=admin1;MultipleActiveResultSets=true;Max Pool Size=10;Connection Timeout=100000;
2021-06-07 08:15:48.261 +01:00 [Information] Starting web host
2021-06-07 08:15:49.187 +01:00 [Warning] Entity '"Product"' has a global query filter defined and is the required end of a relationship with the entity '"ProductHistory"'. This may lead to unexpected results when the required entity is filtered out. Either configure the navigation as optional, or define matching query filters for both entities in the navigation. See https://go.microsoft.com/fwlink/?linkid=2131316 for more information.
2021-06-07 08:15:50.257 +01:00 [Information] Starting IdentityServer4 version "4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f"
2021-06-07 08:15:50.272 +01:00 [Information] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2021-06-07 08:15:50.275 +01:00 [Information] Using the default authentication scheme "Bearer" for IdentityServer
2021-06-07 08:15:50.275 +01:00 [Information] Authentication scheme "Bearer" is configured for IdentityServer, but it is not a scheme that supports signin (like cookies). If you support interactive logins via the browser, then a cookie-based scheme should be used.
2021-06-07 08:15:50.792 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/index.html QueryString:  Request Body: 
2021-06-07 08:15:50.899 +01:00 [Information] Reponse from system: 200: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"/swagger/v1/swagger.json","name":"Amygdalab Product Catalogue v1"}],"deepLinking":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"]}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = window.location.href.replace("index.html", "oauth2-redirect.html").split('#')[0];

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2021-06-07 08:15:51.601 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/v1/swagger.json QueryString:  Request Body: 
2021-06-07 08:15:51.761 +01:00 [Information] Reponse from system: 200: {
  "openapi": "3.0.1",
  "info": {
    "title": "Amygdalab Product Catalogue",
    "description": "A Simple Product Catalogue System",
    "version": "v1"
  },
  "paths": {
    "/api/v{version}/account/admin": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/account/user": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "RegisterResponseApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "$ref": "#/components/schemas/RegisterResponse"
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SearchModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductResponseListApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "nullable": true
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme (Example: 'Bearer 12345abcdef')",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
2021-06-07 08:17:07.101 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 08:17:07.283 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000023-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 07:17:07, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 08:17:08.059 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 08:17:08.085 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000023-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 07:17:08, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 08:17:08.097 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 08:17:08.527 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****68AE" }, Token { TokenType: "access_token", TokenValue: "****eXDQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000023-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 07:17:08, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 08:18:25.047 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /api/v1/account/user QueryString:  Request Body: {"userName":"bimbo1","firstName":"bimbo","lastName":"tope","password":"@Omolaja1","phoneNumber":"098543245","emailAddress":"abolaji"}
2021-06-07 08:18:25.300 +01:00 [Information] Worker registration process started.
2021-06-07 08:18:33.440 +01:00 [Information] User created:- Name: bimbo1, Id: 11
2021-06-07 08:18:38.902 +01:00 [Information] Claims added
2021-06-07 08:18:38.934 +01:00 [Information] Reponse from system: 200: {
  "responseData": null,
  "responseMessage": "Successful",
  "responseCode": "00",
  "requestSuccessful": true
}
2021-06-07 09:01:56.424 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:01:56.433 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:01:56.437 +01:00 [Information] ClientAuthenticationFailureEvent { ClientId: "ro.angular", Category: "Authentication", Name: "Client Authentication Failure", EventType: Failure, Id: 1011, Message: "Invalid client secret", ActivityId: "8000002f-0002-f800-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:01:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:01:56.438 +01:00 [Error] Client secret validation failed for client: "ro.angular".
2021-06-07 09:01:59.187 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:01:59.214 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:01:59.214 +01:00 [Information] ClientAuthenticationFailureEvent { ClientId: "ro.angular", Category: "Authentication", Name: "Client Authentication Failure", EventType: Failure, Id: 1011, Message: "Invalid client secret", ActivityId: "80000062-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:01:59, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:01:59.215 +01:00 [Error] Client secret validation failed for client: "ro.angular".
2021-06-07 09:15:15.000 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:15:15.001 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:15:15.005 +01:00 [Information] ClientAuthenticationFailureEvent { ClientId: "unknown", Category: "Authentication", Name: "Client Authentication Failure", EventType: Failure, Id: 1011, Message: "No client id found", ActivityId: "80000043-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:15:15, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:15:15.005 +01:00 [Error] No client identifier found
2021-06-07 09:15:19.747 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:15:19.748 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:15:19.748 +01:00 [Information] ClientAuthenticationFailureEvent { ClientId: "unknown", Category: "Authentication", Name: "Client Authentication Failure", EventType: Failure, Id: 1011, Message: "No client id found", ActivityId: "80000060-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:15:19, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:15:19.748 +01:00 [Error] No client identifier found
2021-06-07 09:15:46.428 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:15:46.428 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000025-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:15:46, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:15:46.543 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 09:15:46.544 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000025-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:15:46, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:15:46.544 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 09:15:46.564 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****589F" }, Token { TokenType: "access_token", TokenValue: "****Cmxw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000025-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:15:46, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:18:42.898 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:18:42.912 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:18:42.912 +01:00 [Information] ClientAuthenticationFailureEvent { ClientId: "unknown", Category: "Authentication", Name: "Client Authentication Failure", EventType: Failure, Id: 1011, Message: "No client id found", ActivityId: "80000027-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:18:42, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:18:42.912 +01:00 [Error] No client identifier found
2021-06-07 09:20:06.096 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:20:06.097 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:20:06.113 +01:00 [Warning] Invalid HTTP request for token endpoint
2021-06-07 09:26:50.482 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:26:50.483 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:26:50.483 +01:00 [Warning] Invalid HTTP request for token endpoint
2021-06-07 09:27:49.040 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:27:49.051 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:27:49.051 +01:00 [Warning] Invalid HTTP request for token endpoint
2021-06-07 09:29:19.986 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:29:19.987 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:29:19.988 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000063-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:29:19, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:29:20.068 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 09:29:20.068 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000063-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:29:20, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:29:20.069 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 09:29:20.094 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****FE09" }, Token { TokenType: "access_token", TokenValue: "****1ppA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000063-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:29:20, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:30:38.983 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:30:38.996 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:30:38.996 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000031-0002-f800-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:30:38, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:30:39.014 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 09:30:39.014 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000031-0002-f800-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:30:39, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:30:39.014 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 09:30:39.080 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****477C" }, Token { TokenType: "access_token", TokenValue: "****O9mg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000031-0002-f800-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:30:39, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:53:16.930 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 09:53:16.940 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 09:53:16.940 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000014-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:53:16, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:53:16.979 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 09:53:16.980 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000014-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:53:16, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 09:53:16.980 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 09:53:17.006 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****F72E" }, Token { TokenType: "access_token", TokenValue: "****5cSA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000014-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 08:53:17, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:19:57.230 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 10:19:57.232 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 10:19:57.233 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000065-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:19:57, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:19:57.292 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 10:19:57.292 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000065-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:19:57, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:19:57.292 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 10:19:57.314 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****BCC4" }, Token { TokenType: "access_token", TokenValue: "****up7A" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000065-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:19:57, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:26:09.465 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 10:26:09.467 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 10:26:09.477 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000025-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:26:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:26:09.518 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 10:26:09.519 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000025-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:26:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:26:09.519 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 10:26:09.537 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****91D9" }, Token { TokenType: "access_token", TokenValue: "****2hZA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000025-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:26:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:27:04.195 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 10:27:04.205 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 10:27:04.206 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000047-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:27:04, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:27:04.225 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 10:27:04.228 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000047-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:27:04, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:27:04.228 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 10:27:04.305 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****DBBF" }, Token { TokenType: "access_token", TokenValue: "****HZOg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000047-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:27:04, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:28:07.056 +01:00 [Warning] CorsPolicyService did not allow origin: "https://jwt.io"
2021-06-07 10:28:07.060 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryEndpoint" for "/.well-known/openid-configuration"
2021-06-07 10:28:07.213 +01:00 [Warning] CorsPolicyService did not allow origin: "https://jwt.io"
2021-06-07 10:28:07.214 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryKeyEndpoint" for "/.well-known/openid-configuration/jwks"
2021-06-07 10:29:30.026 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 10:29:30.035 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 10:29:30.035 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000004f-0002-f900-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:29:30, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:29:30.060 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 10:29:30.060 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000004f-0002-f900-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:29:30, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:29:30.061 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 10:29:30.090 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****5FDB" }, Token { TokenType: "access_token", TokenValue: "****D0Gg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000004f-0002-f900-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:29:30, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:30:45.382 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 10:30:45.383 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 10:30:45.384 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000069-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:30:45, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:30:45.417 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 10:30:45.417 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000069-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:30:45, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:30:45.418 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 10:30:45.443 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****A965" }, Token { TokenType: "access_token", TokenValue: "****enhA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000069-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:30:45, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:58:32.163 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 10:58:32.190 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 10:58:32.206 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000066-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:58:32, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:58:32.303 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 10:58:32.306 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000066-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:58:32, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 10:58:32.306 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 10:58:32.323 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****05A3" }, Token { TokenType: "access_token", TokenValue: "****eLIA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000066-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 09:58:32, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:16:54.039 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:16:54.041 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:16:54.051 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000006e-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:16:54, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:16:54.090 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:16:54.091 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000006e-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:16:54, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:16:54.091 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:16:54.147 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****9077" }, Token { TokenType: "access_token", TokenValue: "****WK5Q" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000006e-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:16:54, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:19:18.436 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:19:18.437 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:19:18.447 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000027-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:19:18, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:19:18.516 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:19:18.518 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000027-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:19:18, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:19:18.518 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:19:18.535 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****CBAC" }, Token { TokenType: "access_token", TokenValue: "****fY-g" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000027-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:19:18, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:21:16.091 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:21:16.092 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:21:16.095 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000049-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:21:16, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:21:16.128 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:21:16.129 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000049-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:21:16, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:21:16.129 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:21:16.164 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****737D" }, Token { TokenType: "access_token", TokenValue: "****K5sQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000049-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:21:16, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:22:42.967 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:22:42.968 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:22:42.969 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000004b-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:22:42, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:22:43.005 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:22:43.005 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000004b-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:22:43, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:22:43.005 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:22:43.039 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****70DA" }, Token { TokenType: "access_token", TokenValue: "****ynvg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000004b-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:22:43, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:30:36.386 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:30:36.387 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:30:36.388 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000006f-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:30:36, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:30:36.464 +01:00 [Warning] Invalid password for user.
2021-06-07 11:30:36.468 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 11:30:36.469 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 11:30:36.470 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:30:36.472 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "8000006f-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:30:36, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:30:36.476 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "8000006f-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:30:36, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:31:52.153 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:31:52.155 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:31:52.165 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000002d-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:31:52, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:31:52.187 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:31:52.187 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000002d-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:31:52, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:31:52.188 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:31:52.218 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****D484" }, Token { TokenType: "access_token", TokenValue: "****h4hw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000002d-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:31:52, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:32:28.252 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:32:28.255 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:32:28.263 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000071-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:32:28, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:32:28.286 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:32:28.286 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000071-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:32:28, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:32:28.286 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:32:28.301 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****63C3" }, Token { TokenType: "access_token", TokenValue: "****gZOA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000071-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:32:28, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:32:38.393 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:32:38.394 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:32:38.395 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000006c-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:32:38, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:32:38.409 +01:00 [Warning] Invalid password for user.
2021-06-07 11:32:38.409 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 11:32:38.410 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 11:32:38.410 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:32:38.410 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "8000006c-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:32:38, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:32:38.410 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "8000006c-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:32:38, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:33:03.261 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:33:03.261 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:33:03.262 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000002f-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:33:03, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:33:03.276 +01:00 [Warning] Invalid password for user.
2021-06-07 11:33:03.276 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 11:33:03.276 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 11:33:03.277 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:33:03.277 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "8000002f-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:33:03, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:33:03.278 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "8000002f-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:33:03, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:34:09.014 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:34:09.014 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:34:09.015 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000015-0003-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:34:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:34:09.038 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:34:09.038 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000015-0003-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:34:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:34:09.038 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:34:09.056 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****D18F" }, Token { TokenType: "access_token", TokenValue: "****_HMg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000015-0003-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:34:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:35:36.385 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:35:36.386 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:35:36.386 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000073-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:35:36, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:35:36.428 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:35:36.428 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000073-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:35:36, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:35:36.428 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:35:36.473 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****1DBF" }, Token { TokenType: "access_token", TokenValue: "****3E-g" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000073-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:35:36, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:36:25.972 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:36:25.972 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:36:25.976 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000031-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:36:25, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:36:25.992 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:36:25.992 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000031-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:36:25, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:36:25.993 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:36:26.035 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****3BC2" }, Token { TokenType: "access_token", TokenValue: "****ARPA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000031-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:36:26, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:37:58.136 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:37:58.137 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:37:58.151 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000075-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:37:58, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:37:58.178 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:37:58.179 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000075-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:37:58, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:37:58.179 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:37:58.202 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****D978" }, Token { TokenType: "access_token", TokenValue: "****28RA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000075-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:37:58, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:41:13.715 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:41:13.715 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:41:13.726 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000033-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:41:13, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:41:13.756 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:41:13.757 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000033-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:41:13, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:41:13.757 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:41:13.795 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****7C01" }, Token { TokenType: "access_token", TokenValue: "****qqNw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000033-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:41:13, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:44:31.530 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:44:31.531 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:44:31.543 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000004e-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:44:31, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:44:31.583 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:44:31.584 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000004e-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:44:31, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:44:31.584 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:44:31.603 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****A3C0" }, Token { TokenType: "access_token", TokenValue: "****7o1w" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000004e-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:44:31, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:47:55.651 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:47:55.652 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:47:55.653 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000009-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:47:55, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:47:55.697 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:47:55.699 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000009-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:47:55, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:47:55.699 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:47:55.737 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****7981" }, Token { TokenType: "access_token", TokenValue: "****tjcg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000009-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:47:55, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:49:48.529 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:49:48.530 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:49:48.531 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000006f-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:49:48, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:49:48.585 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:49:48.585 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000006f-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:49:48, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:49:48.585 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:49:48.607 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****287D" }, Token { TokenType: "access_token", TokenValue: "****T47w" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000006f-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:49:48, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:50:33.759 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:50:33.760 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:50:33.760 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000071-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:50:33, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:50:33.789 +01:00 [Warning] Invalid password for user.
2021-06-07 11:50:33.789 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 11:50:33.789 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 11:50:33.790 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:50:33.790 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "80000071-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:50:33, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:50:33.790 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "80000071-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:50:33, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:50:53.757 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:50:53.758 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:50:53.758 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000035-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:50:53, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:50:53.813 +01:00 [Warning] Invalid password for user.
2021-06-07 11:50:53.813 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 11:50:53.813 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 11:50:53.813 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:50:53.813 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "80000035-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:50:53, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:50:53.813 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "80000035-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:50:53, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:51:17.531 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:51:17.531 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:51:17.532 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000051-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:51:17, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:51:17.532 +01:00 [Error] Username is missing, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: null, AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": ""), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:51:17.532 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: null, Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "80000051-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:51:17, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:54:27.387 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:54:27.388 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:54:27.388 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000000b-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:54:27, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:54:27.405 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 11:54:27.406 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000000b-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:54:27, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:54:27.406 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:54:27.447 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****C7EE" }, Token { TokenType: "access_token", TokenValue: "****5SLQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000000b-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:54:27, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:55:04.670 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 11:55:04.671 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 11:55:04.675 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000037-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:55:04, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:55:04.701 +01:00 [Information] Credentials validated for username: "bimbo1"
2021-06-07 11:55:04.701 +01:00 [Information] UserLoginSuccessEvent { Username: "bimbo1", Provider: null, ProviderUserId: null, SubjectId: "11", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000037-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:55:04, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 11:55:04.701 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "bimbo1", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "bimbo1"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 11:55:04.734 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "11", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****2A77" }, Token { TokenType: "access_token", TokenValue: "****UUyQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000037-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 10:55:04, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:37:30.334 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 12:37:30.341 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 12:37:30.344 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000016-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:37:30, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:37:30.464 +01:00 [Warning] Invalid password for user.
2021-06-07 12:37:30.464 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 12:37:30.464 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 12:37:30.465 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 12:37:30.465 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "80000016-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:37:30, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:37:30.465 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "80000016-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:37:30, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:37:39.825 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 12:37:39.825 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 12:37:39.826 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000039-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:37:39, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:37:39.848 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 12:37:39.849 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000039-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:37:39, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:37:39.849 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 12:37:39.883 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****7AFD" }, Token { TokenType: "access_token", TokenValue: "****50zA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000039-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:37:39, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:40:19.004 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 12:40:19.005 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 12:40:19.006 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000077-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:40:19, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:40:19.059 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 12:40:19.060 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000077-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:40:19, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:40:19.061 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 12:40:19.105 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****CBF9" }, Token { TokenType: "access_token", TokenValue: "****EHOQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000077-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:40:19, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:40:58.506 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 12:40:58.508 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 12:40:58.509 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000079-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:40:58, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:40:58.529 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 12:40:58.530 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000079-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:40:58, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:40:58.530 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 12:40:58.560 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****2F5F" }, Token { TokenType: "access_token", TokenValue: "****g_7A" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000079-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:40:58, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:50:55.245 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 12:50:55.247 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 12:50:55.255 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000002b-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:50:55, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:50:55.283 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 12:50:55.283 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000002b-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:50:55, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:50:55.284 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 12:50:55.316 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****EAEF" }, Token { TokenType: "access_token", TokenValue: "****ndcg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000002b-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:50:55, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:53:09.412 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 12:53:09.413 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 12:53:09.414 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000006b-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:53:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:53:09.443 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 12:53:09.443 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000006b-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:53:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:53:09.443 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 12:53:09.476 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****4898" }, Token { TokenType: "access_token", TokenValue: "****soOg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000006b-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:53:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:56:57.659 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 12:56:57.660 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 12:56:57.668 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000007b-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:56:57, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:56:57.697 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 12:56:57.697 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000007b-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:56:57, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:56:57.697 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 12:56:57.728 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****B01D" }, Token { TokenType: "access_token", TokenValue: "****F4vw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000007b-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:56:57, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:59:09.825 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 12:59:09.827 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 12:59:09.827 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000075-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:59:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:59:09.855 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 12:59:09.856 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000075-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:59:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 12:59:09.856 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 12:59:09.884 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****42C7" }, Token { TokenType: "access_token", TokenValue: "****QY-w" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000075-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 11:59:09, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:13:05.160 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 13:13:05.160 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 13:13:05.161 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000006d-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:13:05, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:13:05.191 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 13:13:05.191 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000006d-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:13:05, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:13:05.191 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 13:13:05.210 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****4C45" }, Token { TokenType: "access_token", TokenValue: "****ItdA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000006d-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:13:05, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:14:56.301 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 13:14:56.301 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 13:14:56.302 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000006f-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:14:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:14:56.344 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 13:14:56.344 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000006f-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:14:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:14:56.344 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 13:14:56.362 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****B9CE" }, Token { TokenType: "access_token", TokenValue: "****9esg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000006f-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:14:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:56:20.324 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 13:56:20.347 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 13:56:20.357 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000001d-0007-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:56:20, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:56:20.494 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 13:56:20.496 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000001d-0007-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:56:20, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:56:20.497 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 13:56:20.522 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****BABF" }, Token { TokenType: "access_token", TokenValue: "****N7-A" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000001d-0007-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:56:20, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:56:43.810 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 13:56:43.842 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 13:56:43.844 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000001f-0007-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:56:43, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:56:43.859 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 13:56:43.859 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000001f-0007-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:56:43, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:56:43.859 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 13:56:43.887 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****8AF8" }, Token { TokenType: "access_token", TokenValue: "****cS5g" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000001f-0007-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:56:43, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:57:21.956 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 13:57:21.958 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 13:57:21.959 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000077-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:57:21, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:57:21.981 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 13:57:21.981 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000077-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:57:21, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:57:21.981 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 13:57:21.991 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****3850" }, Token { TokenType: "access_token", TokenValue: "****y3Aw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000077-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:57:21, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:59:10.669 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 13:59:10.670 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 13:59:10.672 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000021-0007-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:59:10, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:59:10.704 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 13:59:10.704 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000021-0007-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:59:10, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 13:59:10.704 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 13:59:10.741 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****942A" }, Token { TokenType: "access_token", TokenValue: "****nS0A" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000021-0007-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 12:59:10, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:01:16.121 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:01:16.123 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:01:16.132 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000033-0002-f800-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:01:16, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:01:16.156 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:01:16.157 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000033-0002-f800-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:01:16, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:01:16.157 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:01:16.179 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****E584" }, Token { TokenType: "access_token", TokenValue: "****vRFg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000033-0002-f800-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:01:16, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:01:51.400 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:01:51.400 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:01:51.402 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000071-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:01:51, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:01:51.430 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:01:51.431 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000071-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:01:51, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:01:51.431 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:01:51.475 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****2F51" }, Token { TokenType: "access_token", TokenValue: "****tgLQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000071-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:01:51, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:07:18.910 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:07:18.912 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:07:18.941 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000018-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:07:18, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:07:18.987 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:07:18.987 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000018-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:07:18, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:07:18.987 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:07:19.007 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****9022" }, Token { TokenType: "access_token", TokenValue: "****RPhg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000018-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:07:19, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:08:28.821 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:08:28.822 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:08:28.851 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000007d-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:08:28, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:08:28.874 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:08:28.875 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000007d-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:08:28, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:08:28.875 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:08:28.913 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****6BDE" }, Token { TokenType: "access_token", TokenValue: "****iy-g" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000007d-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:08:28, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:09:26.561 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:09:26.561 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:09:26.563 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000001a-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:09:26, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:09:26.592 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:09:26.592 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000001a-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:09:26, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:09:26.592 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:09:26.621 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****A52D" }, Token { TokenType: "access_token", TokenValue: "****bKBQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000001a-0006-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:09:26, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:09:51.691 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:09:51.692 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:09:51.693 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000072-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:09:51, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:09:51.730 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:09:51.730 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000072-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:09:51, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:09:51.730 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:09:51.746 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****F512" }, Token { TokenType: "access_token", TokenValue: "****pxkQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000072-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:09:51, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:11:54.399 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:11:54.401 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:11:54.401 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000073-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:11:54, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:11:54.435 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:11:54.435 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000073-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:11:54, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:11:54.435 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:11:54.454 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****1F6C" }, Token { TokenType: "access_token", TokenValue: "****DFdA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000073-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:11:54, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:12:38.058 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:12:38.059 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:12:38.060 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000000e-0000-fa00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:12:38, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:12:38.092 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:12:38.092 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000000e-0000-fa00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:12:38, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:12:38.092 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:12:38.125 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****F6FF" }, Token { TokenType: "access_token", TokenValue: "****u1Lg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000000e-0000-fa00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:12:38, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:13:28.857 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:13:28.857 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:13:28.866 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000010-0000-fa00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:13:28, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:13:28.886 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:13:28.887 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000010-0000-fa00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:13:28, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:13:28.887 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:13:28.924 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****1F21" }, Token { TokenType: "access_token", TokenValue: "****20hQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000010-0000-fa00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:13:28, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:15:33.589 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:15:33.590 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:15:33.590 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000007a-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:15:33, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:15:33.617 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:15:33.617 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000007a-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:15:33, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:15:33.617 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:15:33.643 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****0C7D" }, Token { TokenType: "access_token", TokenValue: "****h6Fg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000007a-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:15:33, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:16:32.445 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:16:32.447 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:16:32.458 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000003c-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:16:32, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:16:32.473 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:16:32.473 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000003c-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:16:32, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:16:32.474 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:16:32.509 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****06F9" }, Token { TokenType: "access_token", TokenValue: "****X5FQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000003c-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:16:32, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:24:15.043 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:24:15.044 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:24:15.045 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000075-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:24:15, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:24:15.091 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:24:15.091 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000075-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:24:15, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:24:15.091 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:24:15.166 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****FEB7" }, Token { TokenType: "access_token", TokenValue: "****tVag" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000075-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:24:15, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:24:50.110 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:24:50.110 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:24:50.111 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000007c-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:24:50, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:24:50.140 +01:00 [Warning] Invalid password for user.
2021-06-07 14:24:50.140 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 14:24:50.140 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 14:24:50.141 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:24:50.141 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "8000007c-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:24:50, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:24:50.141 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "8000007c-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:24:50, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:24:55.630 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:24:55.630 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:24:55.630 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000007e-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:24:55, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:24:55.642 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:24:55.642 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000007e-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:24:55, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:24:55.642 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:24:55.667 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****9D8F" }, Token { TokenType: "access_token", TokenValue: "****7DXQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000007e-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:24:55, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:27:05.130 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:27:05.138 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:27:05.138 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000007f-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:27:05, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:27:05.149 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:27:05.149 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000007f-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:27:05, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:27:05.149 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:27:05.171 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****10F5" }, Token { TokenType: "access_token", TokenValue: "****wehw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000007f-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:27:05, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:42:15.390 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:42:15.391 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:42:15.392 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000056-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:42:15, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:42:15.436 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:42:15.437 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000056-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:42:15, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:42:15.437 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:42:15.465 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****60AA" }, Token { TokenType: "access_token", TokenValue: "****Zchg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000056-0005-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:42:15, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:50:56.148 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:50:56.150 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:50:56.150 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000081-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:50:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:50:56.187 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:50:56.187 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000081-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:50:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:50:56.187 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:50:56.213 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****6847" }, Token { TokenType: "access_token", TokenValue: "****N5kw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000081-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:50:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:54:14.992 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:54:14.993 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:54:14.994 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000077-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:54:14, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:54:15.032 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:54:15.032 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000077-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:54:15, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:54:15.033 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:54:15.041 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****FDFD" }, Token { TokenType: "access_token", TokenValue: "****y7TA" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000077-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:54:15, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:57:56.925 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 14:57:56.926 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 14:57:56.927 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000079-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:57:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:57:56.963 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 14:57:56.963 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000079-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:57:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 14:57:56.963 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 14:57:56.971 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****184E" }, Token { TokenType: "access_token", TokenValue: "****Royw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000079-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 13:57:56, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 15:02:24.568 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 15:02:24.570 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 15:02:24.579 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000002f-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 14:02:24, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 15:02:24.599 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 15:02:24.599 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000002f-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 14:02:24, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 15:02:24.599 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 15:02:24.618 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****E458" }, Token { TokenType: "access_token", TokenValue: "****vzfw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000002f-0003-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 14:02:24, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 15:03:40.997 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 15:03:40.998 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 15:03:41.008 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000084-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 14:03:40, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 15:03:41.043 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 15:03:41.043 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000084-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 14:03:41, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 15:03:41.043 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 15:03:41.058 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****6258" }, Token { TokenType: "access_token", TokenValue: "****6f_A" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000084-0000-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 14:03:41, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:32:33.534 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 19:32:33.560 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 19:32:33.570 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000077-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:32:33, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:32:33.685 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 19:32:33.686 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000077-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:32:33, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:32:33.688 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 19:32:33.712 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****7DA1" }, Token { TokenType: "access_token", TokenValue: "****vN9g" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000077-0006-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:32:33, ProcessId: 37284, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:47:12.802 +01:00 [Information] Data Source=DESKTOP-0IH6HO1;Database=ProducCatlog;User Id=admin1;Password=admin1;MultipleActiveResultSets=true;Max Pool Size=10;Connection Timeout=100000;
2021-06-07 19:47:13.702 +01:00 [Information] Starting web host
2021-06-07 19:47:14.816 +01:00 [Warning] Entity '"Product"' has a global query filter defined and is the required end of a relationship with the entity '"ProductHistory"'. This may lead to unexpected results when the required entity is filtered out. Either configure the navigation as optional, or define matching query filters for both entities in the navigation. See https://go.microsoft.com/fwlink/?linkid=2131316 for more information.
2021-06-07 19:47:15.833 +01:00 [Information] Starting IdentityServer4 version "4.1.1+cebd52f5bc61bdefc262fd20739d4d087c6f961f"
2021-06-07 19:47:15.850 +01:00 [Information] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2021-06-07 19:47:15.854 +01:00 [Information] Using the default authentication scheme "Bearer" for IdentityServer
2021-06-07 19:47:15.854 +01:00 [Information] Authentication scheme "Bearer" is configured for IdentityServer, but it is not a scheme that supports signin (like cookies). If you support interactive logins via the browser, then a cookie-based scheme should be used.
2021-06-07 19:47:16.357 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/index.html QueryString:  Request Body: 
2021-06-07 19:47:16.470 +01:00 [Information] Reponse from system: 200: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"/swagger/v1/swagger.json","name":"Amygdalab Product Catalogue v1"}],"deepLinking":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"]}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = window.location.href.replace("index.html", "oauth2-redirect.html").split('#')[0];

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

2021-06-07 19:47:17.622 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /swagger/v1/swagger.json QueryString:  Request Body: 
2021-06-07 19:47:17.791 +01:00 [Information] Reponse from system: 200: {
  "openapi": "3.0.1",
  "info": {
    "title": "Amygdalab Product Catalogue",
    "description": "A Simple Product Catalogue System",
    "version": "v1"
  },
  "paths": {
    "/api/v{version}/account/admin": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/account/user": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/products/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "RegisterResponseApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "$ref": "#/components/schemas/RegisterResponse"
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SearchModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductResponseListApiResponse": {
        "type": "object",
        "properties": {
          "responseData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "nullable": true
          },
          "responseMessage": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "requestSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProductUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "double"
          },
          "sellingPrice": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme (Example: 'Bearer 12345abcdef')",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
2021-06-07 19:51:04.708 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 19:51:04.811 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 19:51:05.018 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000007d-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:51:04, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:51:05.753 +01:00 [Warning] Invalid password for user.
2021-06-07 19:51:05.753 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 19:51:05.755 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 19:51:05.763 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 19:51:05.766 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "8000007d-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:51:05, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:51:05.781 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "8000007d-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:51:05, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:52:36.656 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 19:52:36.668 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 19:52:36.686 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000005a-0000-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:52:36, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:52:36.687 +01:00 [Error] Username is missing, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: null, AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": ""), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 19:52:36.688 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: null, Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "8000005a-0000-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:52:36, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:52:45.819 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 19:52:45.841 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 19:52:45.841 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000083-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:52:45, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:52:45.982 +01:00 [Warning] Invalid password for user.
2021-06-07 19:52:45.982 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 19:52:45.982 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 19:52:45.982 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 19:52:45.982 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "80000083-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:52:45, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:52:45.982 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "80000083-0001-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:52:45, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:52:49.479 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 19:52:49.480 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 19:52:49.480 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000005c-0000-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:52:49, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:52:49.508 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 19:52:49.541 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000005c-0000-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:52:49, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:52:49.542 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 19:52:50.144 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****E02F" }, Token { TokenType: "access_token", TokenValue: "****ekyw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000005c-0000-fb00-b63f-84710c7967bb", TimeStamp: 06/07/2021 18:52:50, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 19:53:56.626 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryEndpoint" for "/.well-known/openid-configuration"
2021-06-07 19:53:56.824 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.DiscoveryKeyEndpoint" for "/.well-known/openid-configuration/jwks"
2021-06-07 19:53:56.925 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /api/v1/products QueryString:  Request Body: {"name":"Honda ","description":"honda accord","costPrice":12342,"sellingPrice":2343223,"quantity":10}
2021-06-07 19:54:05.051 +01:00 [Information] Create product process started.
2021-06-07 19:54:05.383 +01:00 [Information] Reponse from system: 200: {
  "responseData": null,
  "responseMessage": "Successful",
  "responseCode": "00",
  "requestSuccessful": true
}
2021-06-07 19:59:28.124 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /api/v1/products QueryString:  Request Body: {"name":"orange","description":"Orange Juice","costPrice":8009,"sellingPrice":8929,"quantity":28}
2021-06-07 19:59:41.997 +01:00 [Information] Create product process started.
2021-06-07 20:00:03.845 +01:00 [Information] Reponse from system: 200: {
  "responseData": null,
  "responseMessage": "Successful",
  "responseCode": "00",
  "requestSuccessful": true
}
2021-06-07 21:25:26.298 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 21:25:26.395 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 21:25:26.438 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000017-0003-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 20:25:26, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 21:25:26.729 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 21:25:26.730 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000017-0003-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 20:25:26, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 21:25:26.731 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 21:25:26.772 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****7CC5" }, Token { TokenType: "access_token", TokenValue: "****irmw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000017-0003-ff00-b63f-84710c7967bb", TimeStamp: 06/07/2021 20:25:26, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 21:25:48.255 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 21:25:48.269 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 21:25:48.269 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000010-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 20:25:48, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 21:25:48.288 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 21:25:48.289 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000010-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 20:25:48, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 21:25:48.289 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 21:25:48.449 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****20B4" }, Token { TokenType: "access_token", TokenValue: "****i-tg" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000010-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 20:25:48, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:03:29.651 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 22:03:29.669 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 22:03:29.679 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000002-0002-f600-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:03:29, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:03:29.979 +01:00 [Warning] Invalid password for user.
2021-06-07 22:03:29.979 +01:00 [Warning] User failed to provide the correct password.
2021-06-07 22:03:29.979 +01:00 [Information] Authentication failed for username: "abudotnet18", reason: invalid credentials
2021-06-07 22:03:29.981 +01:00 [Information] User authentication failed: "invalid_username_or_password", details: TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 22:03:29.982 +01:00 [Information] UserLoginFailureEvent { Username: "abudotnet18", Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Failure", EventType: Failure, Id: 1001, Message: "invalid_username_or_password", ActivityId: "80000002-0002-f600-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:03:29, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:03:29.983 +01:00 [Information] TokenIssuedFailureEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: null, Scopes: "offline_access", GrantType: "password", Error: "invalid_grant", ErrorDescription: "invalid_username_or_password", Category: "Token", Name: "Token Issued Failure", EventType: Failure, Id: 2001, Message: null, ActivityId: "80000002-0002-f600-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:03:29, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:03:37.098 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 22:03:37.100 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 22:03:37.101 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000004-0002-f600-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:03:37, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:03:37.203 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 22:03:37.204 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000004-0002-f600-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:03:37, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:03:37.204 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 22:03:37.288 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****470D" }, Token { TokenType: "access_token", TokenValue: "****VguQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000004-0002-f600-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:03:37, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:04:59.605 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 22:04:59.606 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 22:04:59.610 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000007f-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:04:59, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:04:59.696 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 22:04:59.697 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000007f-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:04:59, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:04:59.698 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 22:04:59.989 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****F500" }, Token { TokenType: "access_token", TokenValue: "****Y-Ig" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000007f-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:04:59, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:10:23.483 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 22:10:23.500 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 22:10:23.505 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000081-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:10:23, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:10:24.315 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 22:10:24.341 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000081-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:10:24, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:10:24.342 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 22:10:24.447 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****880E" }, Token { TokenType: "access_token", TokenValue: "****Z8uw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000081-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:10:24, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:19:04.971 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 22:19:04.981 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 22:19:04.984 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000013-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:19:04, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:19:09.239 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 22:19:09.248 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000013-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:19:09, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:19:09.248 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 22:19:10.002 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****CFA2" }, Token { TokenType: "access_token", TokenValue: "****W-MQ" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000013-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:19:10, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:33:12.709 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 22:33:12.719 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 22:33:12.727 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000084-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:33:12, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:33:13.301 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 22:33:13.302 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000084-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:33:13, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:33:13.302 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 22:33:13.373 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****4791" }, Token { TokenType: "access_token", TokenValue: "****dzaw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000084-0004-fd00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:33:13, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:34:39.208 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 22:34:39.219 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 22:34:39.219 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "80000015-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:34:39, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:34:39.251 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 22:34:39.251 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "80000015-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:34:39, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 22:34:39.252 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 22:34:39.284 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****912D" }, Token { TokenType: "access_token", TokenValue: "****t9iw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "80000015-0005-fc00-b63f-84710c7967bb", TimeStamp: 06/07/2021 21:34:39, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 23:18:27.915 +01:00 [Warning] CorsPolicyService did not allow origin: "http://localhost:4200"
2021-06-07 23:18:27.928 +01:00 [Information] Invoking IdentityServer endpoint: "IdentityServer4.Endpoints.TokenEndpoint" for "/connect/token"
2021-06-07 23:18:27.930 +01:00 [Information] ClientAuthenticationSuccessEvent { ClientId: "ro.angular", AuthenticationMethod: "SharedSecret", Category: "Authentication", Name: "Client Authentication Success", EventType: Success, Id: 1010, Message: null, ActivityId: "8000003f-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 22:18:27, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 23:18:28.049 +01:00 [Information] Credentials validated for username: "abudotnet18"
2021-06-07 23:18:28.050 +01:00 [Information] UserLoginSuccessEvent { Username: "abudotnet18", Provider: null, ProviderUserId: null, SubjectId: "10", DisplayName: null, Endpoint: "Token", ClientId: "ro.angular", Category: "Authentication", Name: "User Login Success", EventType: Success, Id: 1000, Message: null, ActivityId: "8000003f-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 22:18:28, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 23:18:28.051 +01:00 [Information] Token request validation success, TokenRequestValidationLog { ClientId: "ro.angular", ClientName: "Angular client", GrantType: "password", Scopes: "offline_access", AuthorizationCode: "********", RefreshToken: "********", UserName: "abudotnet18", AuthenticationContextReferenceClasses: null, Tenant: null, IdP: null, Raw: [("username": "abudotnet18"), ("password": "***REDACTED***"), ("client_id": "ro.angular"), ("grant_type": "password"), ("client_secret": "***REDACTED***")] }
2021-06-07 23:18:28.070 +01:00 [Information] TokenIssuedSuccessEvent { ClientId: "ro.angular", ClientName: "Angular client", RedirectUri: null, Endpoint: "Token", SubjectId: "10", Scopes: "offline_access", GrantType: "password", Tokens: [Token { TokenType: "refresh_token", TokenValue: "****117D" }, Token { TokenType: "access_token", TokenValue: "****FSSw" }], Category: "Token", Name: "Token Issued Success", EventType: Success, Id: 2000, Message: null, ActivityId: "8000003f-0007-fe00-b63f-84710c7967bb", TimeStamp: 06/07/2021 22:18:28, ProcessId: 32564, LocalIpAddress: "::1:44395", RemoteIpAddress: "::1" }
2021-06-07 23:33:59.528 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /api/v1/products QueryString:  Request Body: {"name":"tester","description":"Odun","costPrice":12,"sellingPrice":12,"quantity":12}
2021-06-07 23:34:03.055 +01:00 [Information] Create product process started.
2021-06-07 23:34:13.026 +01:00 [Information] Reponse from system: 200: {
  "responseData": null,
  "responseMessage": "Successful",
  "responseCode": "00",
  "requestSuccessful": true
}
2021-06-07 23:34:28.515 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /api/v1/products QueryString:  Request Body: {"name":"tester","description":"Odun","costPrice":12,"sellingPrice":12,"quantity":12}
2021-06-07 23:34:30.771 +01:00 [Information] Create product process started.
2021-06-07 23:35:11.238 +01:00 [Information] Reponse from system: 200: {
  "responseData": null,
  "responseMessage": "Successful",
  "responseCode": "00",
  "requestSuccessful": true
}
2021-06-07 23:36:55.796 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /api/v1/products QueryString:  Request Body: {"name":"test1","description":"test2","costPrice":32,"sellingPrice":223,"quantity":23}
2021-06-07 23:36:57.816 +01:00 [Information] Create product process started.
2021-06-07 23:37:00.130 +01:00 [Information] Reponse from system: 200: {
  "responseData": null,
  "responseMessage": "Successful",
  "responseCode": "00",
  "requestSuccessful": true
}
2021-06-07 23:40:30.422 +01:00 [Information] Http Request Information:
Schema:https Host: localhost:44395 Path: /api/v1/products QueryString:  Request Body: {"name":"tester1","description":"test23","costPrice":12,"sellingPrice":23,"quantity":33}
2021-06-07 23:40:32.781 +01:00 [Information] Create product process started.
2021-06-07 23:40:36.104 +01:00 [Information] Reponse from system: 200: {
  "responseData": null,
  "responseMessage": "Successful",
  "responseCode": "00",
  "requestSuccessful": true
}
